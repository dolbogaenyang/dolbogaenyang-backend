services:
  nginx:
    container_name: nginx
    depends_on:
      - whatpl-blue
      - whatpl-green
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    environment:
      - TZ=Asia/Seoul # TimeZone 설정
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf # nginx 설정파일 Bind Mount
      - ./config/inc.d:/etc/nginx/inc.d # blue/green 배포를 위한 Bind Mount
      - ./certbot/conf:/etc/letsencrypt # certbot 설정파일 Bind Mount
      - ./certbot/www:/var/www/certbot # certbot 설정파일 Bind Mount

  whatpl-blue:
    container_name: whatpl-blue
    image: shinjewoo/whatpl
    depends_on:
      - redis
    ports:
      - 8080:8080
    command:
      - --spring.profiles.active=prod
      - --server.port=8080
    environment:
      - TZ=Asia/Seoul # TimeZone 설정
      - JWT_SECRET=${JWT_SECRET}
      - OAUTH2_CLIENT_ID_GOOGLE=${OAUTH2_CLIENT_ID_GOOGLE}
      - OAUTH2_CLIENT_ID_KAKAO=${OAUTH2_CLIENT_ID_KAKAO}
      - OAUTH2_CLIENT_ID_NAVER=${OAUTH2_CLIENT_ID_NAVER}
      - OAUTH2_CLIENT_SECRET_GOOGLE=${OAUTH2_CLIENT_SECRET_GOOGLE}
      - OAUTH2_CLIENT_SECRET_KAKAO=${OAUTH2_CLIENT_SECRET_KAKAO}
      - OAUTH2_CLIENT_SECRET_NAVER=${OAUTH2_CLIENT_SECRET_NAVER}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - AWS_IAM_ACCESS_KEY=${AWS_IAM_ACCESS_KEY}
      - AWS_IAM_SECRET_KEY=${AWS_IAM_SECRET_KEY}

  whatpl-green:
    container_name: whatpl-green
    image: shinjewoo/whatpl
    depends_on:
      - redis
    ports:
      - 8081:8081
    command:
      - --spring.profiles.active=prod
      - --server.port=8081
    environment:
      - TZ=Asia/Seoul # TimeZone 설정
      - JWT_SECRET=${JWT_SECRET}
      - OAUTH2_CLIENT_ID_GOOGLE=${OAUTH2_CLIENT_ID_GOOGLE}
      - OAUTH2_CLIENT_ID_KAKAO=${OAUTH2_CLIENT_ID_KAKAO}
      - OAUTH2_CLIENT_ID_NAVER=${OAUTH2_CLIENT_ID_NAVER}
      - OAUTH2_CLIENT_SECRET_GOOGLE=${OAUTH2_CLIENT_SECRET_GOOGLE}
      - OAUTH2_CLIENT_SECRET_KAKAO=${OAUTH2_CLIENT_SECRET_KAKAO}
      - OAUTH2_CLIENT_SECRET_NAVER=${OAUTH2_CLIENT_SECRET_NAVER}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - AWS_IAM_ACCESS_KEY=${AWS_IAM_ACCESS_KEY}
      - AWS_IAM_SECRET_KEY=${AWS_IAM_SECRET_KEY}

  redis:
    container_name: redis
    image: redis:7
    ports:
      - 6379:6379
    command: /bin/sh -c "redis-server /etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}"
    environment:
      - TZ=Asia/Seoul # TimeZone 설정
    volumes:
      - whatpl-redis:/data # 데이터 백업용 Volume (RDB, AOF)
      - ./config/redis.conf:/etc/redis/redis.conf # redis 설정 파일 Bind Mount

  certbot:
    depends_on:
      - nginx
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email shinjw0926@naver.com --agree-tos --no-eff-email --keep-until-expiring -d jewoos.site

volumes:
  whatpl-redis:
    external: true
