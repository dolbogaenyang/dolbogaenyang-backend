spring:
  web:
    resources:
      add-mappings: false
  mvc:
    throw-exception-if-no-handler-found: true

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 30
      connection-timeout: 5000
      validation-timeout: 5000

  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB

  jpa:
    hibernate:
      ddl-auto: create
    database: mysql
    open-in-view: false
    properties:
      hibernate:
        default_batch_fetch_size: 200

  data:
    web:
      pageable:
        one-indexed-parameters: true
    redis:
      host: localhost
      port: 6379
      connect-timeout: 5000
      password: ${REDIS_PASSWORD}

  cloud:
    aws:
      credentials:
        access-key: ${AWS_IAM_ACCESS_KEY}
        secret-key: ${AWS_IAM_SECRET_KEY}
      region:
        static: ap-northeast-2
      s3:
        bucket: whatpl

  # 아래 정보는 ClientRegistration 에 저장됨
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_CLIENT_ID_GOOGLE}
            client-secret: ${OAUTH2_CLIENT_SECRET_GOOGLE}
            scope:
              - profile
              - email
          naver:
            client-id: ${OAUTH2_CLIENT_ID_NAVER}
            client-secret: ${OAUTH2_CLIENT_SECRET_NAVER}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
          kakao:
            client-id: ${OAUTH2_CLIENT_ID_KAKAO}
            client-secret: ${OAUTH2_CLIENT_SECRET_KAKAO}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname # 카카오는 비즈앱 아니면 닉네임, 프로필만 가능..
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

decorator:
  datasource:
    p6spy:
      enable-logging: true
      logging: slf4j
      multiline: true

jwt:
  secret: ${JWT_SECRET}
  header: Authorization
  token-type: Bearer
  access-expiration-time: 1_800_000 # 30min
  refresh-expiration-time: 1_209_600_000 # 2weeks

default-image:
  cache-days: 30d
  prefix:
    project: DEFAULT_IMAGE_PROJECT
    skill: DEFAULT_IMAGE_SKILL

# 운영 prod
---
spring:
  config:
    activate:
      on-profile: prod

  data:
    redis:
      host: redis

  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: https://whatpl.com/oauth2/callback/google
          naver:
            redirect-uri: https://whatpl.com/oauth2/callback/naver
          kakao:
            redirect-uri: https://whatpl.com/oauth2/callback/kakao

